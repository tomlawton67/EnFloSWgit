0x00	Operation state	U8	R	The overall state of the Tic. (SeeSection 5.4for descriptions of these states.)			0:Reset	2:De-energized	4:Soft error	6:Waiting for ERR line	8:Starting up	10:Normal										
0x01	Misc flags 1	U8	R	The set bits of this variable provide additional information about the Tics status.			Bit 0:Energized  The Tics motor outputs are enabled and if a stepper motor is properly connected, its coils are energized (i.e. electrical current is flowing).	Bit 1:Position uncertain  The Tic has not received external confirmation that the value of its current position variable is correct (seeSection 5.4).	Bits 27:reserved													
0x02	Error status	U16	R	The set bits of this variable indicate the errors that are currently stopping the motor. The motor can only be controlled normally when this variable has a value of 0. (SeeSection 5.4for error descriptions.)			Bit 0:Intentionally de-energized	Bit 1:Motor driver error	Bit 2:Low VIN	Bit 3:Kill switch active	Bit 4:Required input invalid	Bit 5:Serial error	Bit 6:Command timeout	Bit 7:Safe start violation	Bit 8:ERR line high	Bits 915:reserved						
0x04	Errors occurred	U32	R	The set bits of this variable indicate the errors that have occurred since this variable was last cleared with the get variable and clear errors occurred command.			Bit 0:Intentionally de-energized	Bit 1:Motor driver error	Bit 2:Low VIN	Bit 3:Kill switch active	Bit 4:Required input invalid	Bit 5:Serial error	Bit 6:Command timeout	Bit 7:Safe start violation	Bit 8:ERR line high	Bits 915:reserved	Bit 16:Serial framing	Bit 17:Serial RX overrun	Bit 18:Serial format	Bit 19:Serial CRC	Bit 20:Encoder skip	Bits 2131:reserved
0x09	Planning mode	U8	R	The kind of step planning algorithm the controller is currently using.			0:Off (no target; not sending steps)	1:Target position	2:Target velocity													
0x0A	Target position	I32	RW	Motor target position (_2,147,483,648 to +2,147,483,647 = _0x8000_0000 to +0x7FFF_FFFF). This value is only meaningful if the planning mode variable indicates target position.		microsteps																
0x0E	Target velocity	I32	RW	Motor target velocity (_500,000,000 to +500,000,000). This value is only meaningful if the planning mode variable indicates target velocity.		microsteps per 10,000s																
0x12	Starting speed	U32	RW	Maximum speed at which instant acceleration and deceleration are allowed (0 to 500,000,000).		microsteps per 10,000s																
0x16	Max speed	U32	RW	Maximum allowed motor speed (0 to 500,000,000).		microsteps per 10,000s																
0x1A	Max deceleration	U32	RW	Maximum allowed motor deceleration (100 to 2,147,483,647 = 0x64 to 0x7FFF_FFFF).		microsteps per 100s_																
0x1E	Max acceleration	U32	RW	Maximum allowed motor acceleration (100 to 2,147,483,647 = 0x64 to 0x7FFF_FFFF).		microsteps per 100s_																
0x22	Current position	I32	RW	Current position of the motor (_2,147,483,648 to +2,147,483,647 = _0x8000_0000 to +0x7FFF_FFFF). Note that this just tracks steps that the Tic has commanded the stepper driver to take; it could be different from the actual position of the motor for various reasons.		microsteps																
0x26	Current velocity	I32	RW	Current velocity of the motor (_500,000,000 to +500,000,000). Note that this is just the step rate and direction the Tic is sending to the driver, and it might not correspond to the actual velocity of the motor for various reasons.		microsteps per 10,000s																
0x2A	Acting target position	I32	RW	This is a variable used in the Tics target position step planning algorithm. It is accessible mainly for getting insight into the algorithm or for troubleshooting.This value could be invalid while the motor is stopped.		microsteps																
0x2E	Time since last step	U32	RW	This is a variable used in the Tics step planning algorithms. It is accessible mainly for getting insight into the algorithms or for troubleshooting. This value could be invalid while the motor is stopped.	0.33333333	 s																
0x32	Device reset	U8	R	The cause of the Tics last full microcontroller reset.			0:Power up	1:Brown-out reset	2:Reset line (RST) pulled low by external source	4:Watchdog timer reset (should never happen; this could indicate a firmware bug)	8:Software reset (by firmware upgrade process)	16:Stack overflow (should never happen; this could indicate a firmware bug)	32:Stack underflow (should never happen; this could indicate a firmware bug)									
0x33	VIN voltage	U16	R	Measured voltage on the VIN pin.		mV																
0x35	Up time	U32	R	Time since the Tics microcontroller last experienced a full reset or was powered up. A reset command doesnotaffect this variable.		ms																
0x39	Encoder position	I32	R	Raw encoder count measured from the quadrature encoder inputs (TX and RX).		ticks																
0x3D	RC pulse width	U16	R	Reading from the RC pulse input. 0xFFFF means the reading is not available or invalid.	0.083333333	s																
0x3F	Analog reading SCL	U16	R	Analog reading from the SCL pin, if analog readings are enabled for it. 0xFFFF means the reading is not available.	0.076296274	mV																
0x41	Analog reading SDA	U16	R	Analog reading from the SDA pin, if analog readings are enabled for it. 0xFFFF means the reading is not available.	0.076296274	mV																
0x43	Analog reading TX	U16	R	Analog reading from the TX pin, if analog readings are enabled for it. 0xFFFF means the reading is not available.	0.076296274	mV																
0x45	Analog reading RX	U16	R	Analog reading from the RX pin, if analog readings are enabled for it. 0xFFFF means the reading is not available.	0.076296274	mV																
0x47	Digital readings	U8	R	Digital readings from the Tics control pins. A set bit indicates that the pin is high.			Bit 0:SCL	Bit 1:SDA	Bit 2:TX	Bit 3:RX	Bit 4:RC	Bits 57:reserved										
0x48	Pin states	U8		States of the Tics control pins, i.e. what kind of input or output each pin is.			Bits 01:SCL	Bits 23:SDA	Bits 45:TX	Bits 67:RX	0:High impedance	1:Pulled up	2:Output low	3:Output high								
0x49	Step mode	U8	RW	Step mode of the Tics stepper driver (also known as microstepping mode), which defines how many microsteps correspond to one full step.			0:Full step	1:1/2 step	2:1/4 step	3:1/8 step	4:1/16 step (Tic T834 and Tic T825 only)	5:1/32 step (Tic T834 and Tic T825 only)										
0x4A	Current limit	U8	RW	Stepper motor coil current limit of the Tics stepper driver (0 to 124).	32	mA	SeeSection 6															
0x4B	Decay mode	U8	RW	Decay mode of the Tics stepper driver.			0:Mixed	1:Slow	2:Fast													
0x4C	Input state	U8	R	State of the Tics main input.			0:Not ready	1:Invalid	2:Halt	3:Target position	4:Target velocity											
0x4D	Input after averaging	U16	R	Used in the process that converts raw RC and analog values into a motor position or speed. They are mainly for debugging your input scaling settings in an RC or analog mode. 0xFFFF means the reading is not available.			SeeSection 5.2.															
0x4F	Input after hysteresis	U16	R	Used in the process that converts raw RC and analog values into a motor position or speed. They are mainly for debugging your input scaling settings in an RC or analog mode. 0xFFFF means the reading is not available.																		
0x51	Input after scaling	I32	R	Value of the Tics main input after scaling has been applied. If the input is valid, this number is the target position or target velocity specified by the input.		microsteps																